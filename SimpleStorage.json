{
    "components": {},
    "info": {
        "title": "SimpleStorage",
        "version": "1.0.0"
    },
    "openapi": "3.0.2",
    "paths": {
        "/interface": {
            "get": {
                "operationId": "interface",
                "parameters": [
                    {
                        "description": "Server-side request timeout (milliseconds, or set a custom suffix like 10s)",
                        "in": "header",
                        "name": "Request-Timeout",
                        "schema": {
                            "default": "20s",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "description": {
                                            "description": "A description of the smart contract this FFI represents",
                                            "type": "string"
                                        },
                                        "errors": {
                                            "description": "An array of smart contract error definitions",
                                            "items": {
                                                "description": "An array of smart contract error definitions",
                                                "properties": {
                                                    "description": {
                                                        "description": "A description of the smart contract error",
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "description": "The UUID of the FFI error definition",
                                                        "format": "uuid",
                                                        "type": "string"
                                                    },
                                                    "interface": {
                                                        "description": "The UUID of the FFI smart contract definition that this error is part of",
                                                        "format": "uuid",
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "description": "The name of the error",
                                                        "type": "string"
                                                    },
                                                    "namespace": {
                                                        "description": "The namespace of the FFI",
                                                        "type": "string"
                                                    },
                                                    "params": {
                                                        "description": "An array of error parameter/argument definitions",
                                                        "items": {
                                                            "description": "An array of error parameter/argument definitions",
                                                            "properties": {
                                                                "name": {
                                                                    "description": "The name of the parameter. Note that parameters must be ordered correctly on the FFI, according to the order in the blockchain smart contract",
                                                                    "type": "string"
                                                                },
                                                                "schema": {
                                                                    "description": "FireFly uses an extended subset of JSON Schema to describe parameters, similar to OpenAPI/Swagger. Converters are available for native blockchain interface definitions / type systems - such as an Ethereum ABI. See the documentation for more detail"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "pathname": {
                                                        "description": "The unique name allocated to this error within the FFI for use on URL paths",
                                                        "type": "string"
                                                    },
                                                    "signature": {
                                                        "description": "The stringified signature of the error, as computed by the blockchain plugin",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "events": {
                                            "description": "An array of smart contract event definitions",
                                            "items": {
                                                "description": "An array of smart contract event definitions",
                                                "properties": {
                                                    "description": {
                                                        "description": "A description of the smart contract event",
                                                        "type": "string"
                                                    },
                                                    "details": {
                                                        "additionalProperties": {
                                                            "description": "Additional blockchain specific fields about this event from the original smart contract. Used by the blockchain plugin and for documentation generation."
                                                        },
                                                        "description": "Additional blockchain specific fields about this event from the original smart contract. Used by the blockchain plugin and for documentation generation.",
                                                        "type": "object"
                                                    },
                                                    "id": {
                                                        "description": "The UUID of the FFI event definition",
                                                        "format": "uuid",
                                                        "type": "string"
                                                    },
                                                    "interface": {
                                                        "description": "The UUID of the FFI smart contract definition that this event is part of",
                                                        "format": "uuid",
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "description": "The name of the event",
                                                        "type": "string"
                                                    },
                                                    "namespace": {
                                                        "description": "The namespace of the FFI",
                                                        "type": "string"
                                                    },
                                                    "params": {
                                                        "description": "An array of event parameter/argument definitions",
                                                        "items": {
                                                            "description": "An array of event parameter/argument definitions",
                                                            "properties": {
                                                                "name": {
                                                                    "description": "The name of the parameter. Note that parameters must be ordered correctly on the FFI, according to the order in the blockchain smart contract",
                                                                    "type": "string"
                                                                },
                                                                "schema": {
                                                                    "description": "FireFly uses an extended subset of JSON Schema to describe parameters, similar to OpenAPI/Swagger. Converters are available for native blockchain interface definitions / type systems - such as an Ethereum ABI. See the documentation for more detail"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "pathname": {
                                                        "description": "The unique name allocated to this event within the FFI for use on URL paths. Supports contracts that have multiple event overrides with the same name",
                                                        "type": "string"
                                                    },
                                                    "signature": {
                                                        "description": "The stringified signature of the event, as computed by the blockchain plugin",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "id": {
                                            "description": "The UUID of the FireFly interface (FFI) smart contract definition",
                                            "format": "uuid",
                                            "type": "string"
                                        },
                                        "message": {
                                            "description": "The UUID of the broadcast message that was used to publish this FFI to the network",
                                            "format": "uuid",
                                            "type": "string"
                                        },
                                        "methods": {
                                            "description": "An array of smart contract method definitions",
                                            "items": {
                                                "description": "An array of smart contract method definitions",
                                                "properties": {
                                                    "description": {
                                                        "description": "A description of the smart contract method",
                                                        "type": "string"
                                                    },
                                                    "details": {
                                                        "additionalProperties": {
                                                            "description": "Additional blockchain specific fields about this method from the original smart contract. Used by the blockchain plugin and for documentation generation."
                                                        },
                                                        "description": "Additional blockchain specific fields about this method from the original smart contract. Used by the blockchain plugin and for documentation generation.",
                                                        "type": "object"
                                                    },
                                                    "id": {
                                                        "description": "The UUID of the FFI method definition",
                                                        "format": "uuid",
                                                        "type": "string"
                                                    },
                                                    "interface": {
                                                        "description": "The UUID of the FFI smart contract definition that this method is part of",
                                                        "format": "uuid",
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "description": "The name of the method",
                                                        "type": "string"
                                                    },
                                                    "namespace": {
                                                        "description": "The namespace of the FFI",
                                                        "type": "string"
                                                    },
                                                    "params": {
                                                        "description": "An array of method parameter/argument definitions",
                                                        "items": {
                                                            "description": "An array of method parameter/argument definitions",
                                                            "properties": {
                                                                "name": {
                                                                    "description": "The name of the parameter. Note that parameters must be ordered correctly on the FFI, according to the order in the blockchain smart contract",
                                                                    "type": "string"
                                                                },
                                                                "schema": {
                                                                    "description": "FireFly uses an extended subset of JSON Schema to describe parameters, similar to OpenAPI/Swagger. Converters are available for native blockchain interface definitions / type systems - such as an Ethereum ABI. See the documentation for more detail"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "pathname": {
                                                        "description": "The unique name allocated to this method within the FFI for use on URL paths. Supports contracts that have multiple method overrides with the same name",
                                                        "type": "string"
                                                    },
                                                    "returns": {
                                                        "description": "An array of method return definitions",
                                                        "items": {
                                                            "description": "An array of method return definitions",
                                                            "properties": {
                                                                "name": {
                                                                    "description": "The name of the parameter. Note that parameters must be ordered correctly on the FFI, according to the order in the blockchain smart contract",
                                                                    "type": "string"
                                                                },
                                                                "schema": {
                                                                    "description": "FireFly uses an extended subset of JSON Schema to describe parameters, similar to OpenAPI/Swagger. Converters are available for native blockchain interface definitions / type systems - such as an Ethereum ABI. See the documentation for more detail"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "name": {
                                            "description": "The name of the FFI - usually matching the smart contract name",
                                            "type": "string"
                                        },
                                        "namespace": {
                                            "description": "The namespace of the FFI",
                                            "type": "string"
                                        },
                                        "version": {
                                            "description": "A version for the FFI - use of semantic versioning such as 'v1.0.1' is encouraged",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Success"
                    },
                    "default": {
                        "description": ""
                    }
                },
                "tags": [
                    ""
                ]
            }
        },
        "/invoke/get": {
            "post": {
                "description": "\n\nAdditional smart contract details:\n\n| Key | Key |\n|-----|-------|\n|stateMutability|view|\n",
                "operationId": "invoke_get",
                "parameters": [
                    {
                        "description": "Server-side request timeout (milliseconds, or set a custom suffix like 10s)",
                        "in": "header",
                        "name": "Request-Timeout",
                        "schema": {
                            "default": "20s",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "idempotencyKey": {
                                        "description": "An optional identifier to allow idempotent submission of requests. Stored on the transaction uniquely within a namespace",
                                        "type": "string"
                                    },
                                    "input": {
                                        "description": "A map of named inputs. The name and type of each input must be compatible with the FFI description of the method, so that FireFly knows how to serialize it to the blockchain via the connector",
                                        "type": "object"
                                    },
                                    "key": {
                                        "description": "The blockchain signing key that will sign the invocation. Defaults to the first signing key of the organization that operates the node",
                                        "type": "string"
                                    },
                                    "options": {
                                        "description": "A map of named inputs that will be passed through to the blockchain connector",
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "idempotencyKey": {
                                            "description": "An optional identifier to allow idempotent submission of requests. Stored on the transaction uniquely within a namespace",
                                            "type": "string"
                                        },
                                        "input": {
                                            "description": "A map of named inputs. The name and type of each input must be compatible with the FFI description of the method, so that FireFly knows how to serialize it to the blockchain via the connector",
                                            "properties": {
                                                "": {
                                                    "description": "An integer. You are recommended to use a JSON string. A JSON number can be used for values up to the safe maximum.",
                                                    "details": {
                                                        "type": "uint256",
                                                        "internalType": "uint256"
                                                    },
                                                    "oneOf": [
                                                        {
                                                            "type": "string"
                                                        },
                                                        {
                                                            "type": "integer"
                                                        }
                                                    ]
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "key": {
                                            "description": "The blockchain signing key that will sign the invocation. Defaults to the first signing key of the organization that operates the node",
                                            "type": "string"
                                        },
                                        "options": {
                                            "description": "A map of named inputs that will be passed through to the blockchain connector",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Success"
                    },
                    "default": {
                        "description": ""
                    }
                },
                "tags": [
                    ""
                ]
            }
        },
        "/invoke/set": {
            "post": {
                "description": "\n\nAdditional smart contract details:\n\n| Key | Key |\n|-----|-------|\n|stateMutability|nonpayable|\n",
                "operationId": "invoke_set",
                "parameters": [
                    {
                        "description": "Server-side request timeout (milliseconds, or set a custom suffix like 10s)",
                        "in": "header",
                        "name": "Request-Timeout",
                        "schema": {
                            "default": "20s",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "idempotencyKey": {
                                        "description": "An optional identifier to allow idempotent submission of requests. Stored on the transaction uniquely within a namespace",
                                        "type": "string"
                                    },
                                    "input": {
                                        "description": "A map of named inputs. The name and type of each input must be compatible with the FFI description of the method, so that FireFly knows how to serialize it to the blockchain via the connector",
                                        "properties": {
                                            "newValue": {
                                                "description": "An integer. You are recommended to use a JSON string. A JSON number can be used for values up to the safe maximum.",
                                                "details": {
                                                    "type": "uint256",
                                                    "internalType": "uint256"
                                                },
                                                "oneOf": [
                                                    {
                                                        "type": "string"
                                                    },
                                                    {
                                                        "type": "integer"
                                                    }
                                                ]
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "key": {
                                        "description": "The blockchain signing key that will sign the invocation. Defaults to the first signing key of the organization that operates the node",
                                        "type": "string"
                                    },
                                    "options": {
                                        "description": "A map of named inputs that will be passed through to the blockchain connector",
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "idempotencyKey": {
                                            "description": "An optional identifier to allow idempotent submission of requests. Stored on the transaction uniquely within a namespace",
                                            "type": "string"
                                        },
                                        "input": {
                                            "description": "A map of named inputs. The name and type of each input must be compatible with the FFI description of the method, so that FireFly knows how to serialize it to the blockchain via the connector",
                                            "type": "object"
                                        },
                                        "key": {
                                            "description": "The blockchain signing key that will sign the invocation. Defaults to the first signing key of the organization that operates the node",
                                            "type": "string"
                                        },
                                        "options": {
                                            "description": "A map of named inputs that will be passed through to the blockchain connector",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Success"
                    },
                    "default": {
                        "description": ""
                    }
                },
                "tags": [
                    ""
                ]
            }
        },
        "/listeners/Changed": {
            "get": {
                "operationId": "getlistener_Changed",
                "parameters": [
                    {
                        "description": "Server-side request timeout (milliseconds, or set a custom suffix like 10s)",
                        "in": "header",
                        "name": "Request-Timeout",
                        "schema": {
                            "default": "20s",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "backendId": {
                                                "description": "An ID assigned by the blockchain connector to this listener",
                                                "type": "string"
                                            },
                                            "created": {
                                                "description": "The creation time of the listener",
                                                "format": "date-time",
                                                "type": "string"
                                            },
                                            "event": {
                                                "description": "The definition of the event, either provided in-line when creating the listener, or extracted from the referenced FFI",
                                                "properties": {
                                                    "description": {
                                                        "description": "A description of the smart contract event",
                                                        "type": "string"
                                                    },
                                                    "details": {
                                                        "additionalProperties": {
                                                            "description": "Additional blockchain specific fields about this event from the original smart contract. Used by the blockchain plugin and for documentation generation."
                                                        },
                                                        "description": "Additional blockchain specific fields about this event from the original smart contract. Used by the blockchain plugin and for documentation generation.",
                                                        "type": "object"
                                                    },
                                                    "name": {
                                                        "description": "The name of the event",
                                                        "type": "string"
                                                    },
                                                    "params": {
                                                        "description": "An array of event parameter/argument definitions",
                                                        "items": {
                                                            "description": "An array of event parameter/argument definitions",
                                                            "properties": {
                                                                "name": {
                                                                    "description": "The name of the parameter. Note that parameters must be ordered correctly on the FFI, according to the order in the blockchain smart contract",
                                                                    "type": "string"
                                                                },
                                                                "schema": {
                                                                    "description": "FireFly uses an extended subset of JSON Schema to describe parameters, similar to OpenAPI/Swagger. Converters are available for native blockchain interface definitions / type systems - such as an Ethereum ABI. See the documentation for more detail"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "id": {
                                                "description": "The UUID of the smart contract listener",
                                                "format": "uuid",
                                                "type": "string"
                                            },
                                            "interface": {
                                                "description": "A reference to an existing FFI, containing pre-registered type information for the event",
                                                "properties": {
                                                    "id": {
                                                        "description": "The UUID of the FireFly interface",
                                                        "format": "uuid",
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "description": "The name of the FireFly interface",
                                                        "type": "string"
                                                    },
                                                    "version": {
                                                        "description": "The version of the FireFly interface",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "location": {
                                                "description": "A blockchain specific contract identifier. For example an Ethereum contract address, or a Fabric chaincode name and channel"
                                            },
                                            "name": {
                                                "description": "A descriptive name for the listener",
                                                "type": "string"
                                            },
                                            "namespace": {
                                                "description": "The namespace of the listener, which defines the namespace of all blockchain events detected by this listener",
                                                "type": "string"
                                            },
                                            "options": {
                                                "description": "Options that control how the listener subscribes to events from the underlying blockchain",
                                                "properties": {
                                                    "firstEvent": {
                                                        "description": "A blockchain specific string, such as a block number, to start listening from. The special strings 'oldest' and 'newest' are supported by all blockchain connectors. Default is 'newest'",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "signature": {
                                                "description": "The stringified signature of the event, as computed by the blockchain plugin",
                                                "type": "string"
                                            },
                                            "topic": {
                                                "description": "A topic to set on the FireFly event that is emitted each time a blockchain event is detected from the blockchain. Setting this topic on a number of listeners allows applications to easily subscribe to all events they need",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Success"
                    },
                    "default": {
                        "description": ""
                    }
                },
                "tags": [
                    ""
                ]
            },
            "post": {
                "operationId": "createlistener_Changed",
                "parameters": [
                    {
                        "description": "Server-side request timeout (milliseconds, or set a custom suffix like 10s)",
                        "in": "header",
                        "name": "Request-Timeout",
                        "schema": {
                            "default": "20s",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "A descriptive name for the listener",
                                        "type": "string"
                                    },
                                    "options": {
                                        "description": "Options that control how the listener subscribes to events from the underlying blockchain",
                                        "properties": {
                                            "firstEvent": {
                                                "description": "A blockchain specific string, such as a block number, to start listening from. The special strings 'oldest' and 'newest' are supported by all blockchain connectors. Default is 'newest'",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "topic": {
                                        "description": "A topic to set on the FireFly event that is emitted each time a blockchain event is detected from the blockchain. Setting this topic on a number of listeners allows applications to easily subscribe to all events they need",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "backendId": {
                                            "description": "An ID assigned by the blockchain connector to this listener",
                                            "type": "string"
                                        },
                                        "created": {
                                            "description": "The creation time of the listener",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "event": {
                                            "description": "The definition of the event, either provided in-line when creating the listener, or extracted from the referenced FFI",
                                            "properties": {
                                                "description": {
                                                    "description": "A description of the smart contract event",
                                                    "type": "string"
                                                },
                                                "details": {
                                                    "additionalProperties": {
                                                        "description": "Additional blockchain specific fields about this event from the original smart contract. Used by the blockchain plugin and for documentation generation."
                                                    },
                                                    "description": "Additional blockchain specific fields about this event from the original smart contract. Used by the blockchain plugin and for documentation generation.",
                                                    "type": "object"
                                                },
                                                "name": {
                                                    "description": "The name of the event",
                                                    "type": "string"
                                                },
                                                "params": {
                                                    "description": "An array of event parameter/argument definitions",
                                                    "items": {
                                                        "description": "An array of event parameter/argument definitions",
                                                        "properties": {
                                                            "name": {
                                                                "description": "The name of the parameter. Note that parameters must be ordered correctly on the FFI, according to the order in the blockchain smart contract",
                                                                "type": "string"
                                                            },
                                                            "schema": {
                                                                "description": "FireFly uses an extended subset of JSON Schema to describe parameters, similar to OpenAPI/Swagger. Converters are available for native blockchain interface definitions / type systems - such as an Ethereum ABI. See the documentation for more detail"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "id": {
                                            "description": "The UUID of the smart contract listener",
                                            "format": "uuid",
                                            "type": "string"
                                        },
                                        "interface": {
                                            "description": "A reference to an existing FFI, containing pre-registered type information for the event",
                                            "properties": {
                                                "id": {
                                                    "description": "The UUID of the FireFly interface",
                                                    "format": "uuid",
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "description": "The name of the FireFly interface",
                                                    "type": "string"
                                                },
                                                "version": {
                                                    "description": "The version of the FireFly interface",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "location": {
                                            "description": "A blockchain specific contract identifier. For example an Ethereum contract address, or a Fabric chaincode name and channel"
                                        },
                                        "name": {
                                            "description": "A descriptive name for the listener",
                                            "type": "string"
                                        },
                                        "namespace": {
                                            "description": "The namespace of the listener, which defines the namespace of all blockchain events detected by this listener",
                                            "type": "string"
                                        },
                                        "options": {
                                            "description": "Options that control how the listener subscribes to events from the underlying blockchain",
                                            "properties": {
                                                "firstEvent": {
                                                    "description": "A blockchain specific string, such as a block number, to start listening from. The special strings 'oldest' and 'newest' are supported by all blockchain connectors. Default is 'newest'",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "signature": {
                                            "description": "The stringified signature of the event, as computed by the blockchain plugin",
                                            "type": "string"
                                        },
                                        "topic": {
                                            "description": "A topic to set on the FireFly event that is emitted each time a blockchain event is detected from the blockchain. Setting this topic on a number of listeners allows applications to easily subscribe to all events they need",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Success"
                    },
                    "default": {
                        "description": ""
                    }
                },
                "tags": [
                    ""
                ]
            }
        },
        "/query/get": {
            "post": {
                "description": "\n\nAdditional smart contract details:\n\n| Key | Key |\n|-----|-------|\n|stateMutability|view|\n",
                "operationId": "query_get",
                "parameters": [
                    {
                        "description": "Server-side request timeout (milliseconds, or set a custom suffix like 10s)",
                        "in": "header",
                        "name": "Request-Timeout",
                        "schema": {
                            "default": "20s",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "idempotencyKey": {
                                        "description": "An optional identifier to allow idempotent submission of requests. Stored on the transaction uniquely within a namespace",
                                        "type": "string"
                                    },
                                    "input": {
                                        "description": "A map of named inputs. The name and type of each input must be compatible with the FFI description of the method, so that FireFly knows how to serialize it to the blockchain via the connector",
                                        "type": "object"
                                    },
                                    "key": {
                                        "description": "The blockchain signing key that will sign the invocation. Defaults to the first signing key of the organization that operates the node",
                                        "type": "string"
                                    },
                                    "options": {
                                        "description": "A map of named inputs that will be passed through to the blockchain connector",
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "idempotencyKey": {
                                            "description": "An optional identifier to allow idempotent submission of requests. Stored on the transaction uniquely within a namespace",
                                            "type": "string"
                                        },
                                        "input": {
                                            "description": "A map of named inputs. The name and type of each input must be compatible with the FFI description of the method, so that FireFly knows how to serialize it to the blockchain via the connector",
                                            "properties": {
                                                "": {
                                                    "description": "An integer. You are recommended to use a JSON string. A JSON number can be used for values up to the safe maximum.",
                                                    "details": {
                                                        "type": "uint256",
                                                        "internalType": "uint256"
                                                    },
                                                    "oneOf": [
                                                        {
                                                            "type": "string"
                                                        },
                                                        {
                                                            "type": "integer"
                                                        }
                                                    ]
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "key": {
                                            "description": "The blockchain signing key that will sign the invocation. Defaults to the first signing key of the organization that operates the node",
                                            "type": "string"
                                        },
                                        "options": {
                                            "description": "A map of named inputs that will be passed through to the blockchain connector",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Success"
                    },
                    "default": {
                        "description": ""
                    }
                },
                "tags": [
                    ""
                ]
            }
        },
        "/query/set": {
            "post": {
                "description": "\n\nAdditional smart contract details:\n\n| Key | Key |\n|-----|-------|\n|stateMutability|nonpayable|\n",
                "operationId": "query_set",
                "parameters": [
                    {
                        "description": "Server-side request timeout (milliseconds, or set a custom suffix like 10s)",
                        "in": "header",
                        "name": "Request-Timeout",
                        "schema": {
                            "default": "20s",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "idempotencyKey": {
                                        "description": "An optional identifier to allow idempotent submission of requests. Stored on the transaction uniquely within a namespace",
                                        "type": "string"
                                    },
                                    "input": {
                                        "description": "A map of named inputs. The name and type of each input must be compatible with the FFI description of the method, so that FireFly knows how to serialize it to the blockchain via the connector",
                                        "properties": {
                                            "newValue": {
                                                "description": "An integer. You are recommended to use a JSON string. A JSON number can be used for values up to the safe maximum.",
                                                "details": {
                                                    "type": "uint256",
                                                    "internalType": "uint256"
                                                },
                                                "oneOf": [
                                                    {
                                                        "type": "string"
                                                    },
                                                    {
                                                        "type": "integer"
                                                    }
                                                ]
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "key": {
                                        "description": "The blockchain signing key that will sign the invocation. Defaults to the first signing key of the organization that operates the node",
                                        "type": "string"
                                    },
                                    "options": {
                                        "description": "A map of named inputs that will be passed through to the blockchain connector",
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "idempotencyKey": {
                                            "description": "An optional identifier to allow idempotent submission of requests. Stored on the transaction uniquely within a namespace",
                                            "type": "string"
                                        },
                                        "input": {
                                            "description": "A map of named inputs. The name and type of each input must be compatible with the FFI description of the method, so that FireFly knows how to serialize it to the blockchain via the connector",
                                            "type": "object"
                                        },
                                        "key": {
                                            "description": "The blockchain signing key that will sign the invocation. Defaults to the first signing key of the organization that operates the node",
                                            "type": "string"
                                        },
                                        "options": {
                                            "description": "A map of named inputs that will be passed through to the blockchain connector",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Success"
                    },
                    "default": {
                        "description": ""
                    }
                },
                "tags": [
                    ""
                ]
            }
        }
    },
    "servers": [
        {
            "url": "https://a0lk0zv264-a0f1etiuo1-firefly-os.au0-aws-ws.kaleido.io/api/v1/namespaces/RLEXDev/apis/SimpleStorage"
        }
    ]
}